var documenterSearchIndex = {"docs":
[{"location":"#PressureDrop.jl-Documentation-1","page":"Overview","title":"PressureDrop.jl Documentation","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"CurrentModule = PressureDrop","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"PressureDrop.jl is a Julia package for computing multiphase pressure profiles for gas lift optimization of oil & gas wells.","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Outlet-referenced models for producing wells using non-coupled temperature gradients are currently supported. ","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"note: Note\nNote that all inputs and calculations are in U.S. field units.","category":"page"},{"location":"#Overview-1","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"The pressure traverse along the producing flow path of an oil well (or its bottomhole pressure at the interface between the well and the reservoir) is critical information for many production and reservoir engineering workflows. This can be expensive to measure directly in many conditions, so 1D pressure and temperature models are frequently used to infer producing conditions.","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"In most wells, the fluid flow contains three distinct phases (oil, water, and gas) with temperature- and pressure-dependent properties, including density, viscosity. In addition, the fluids will exhibit varying degrees of miscibility and entrainment depending on pressure and temperature as well, such that the pressure change with respect to distance or depth along the wellbore is itself dependent on pressure:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"fracph = f(pT)","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Since the temperature profile varies according to depth, when assuming steady-state flow, consistent composition of each fluid, and a steady-state temperature profile uncoupled from pressure, the above can be re-expressed in terms of distance and pressure only:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"fracdpdh = f(ph)","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Note that f is composited from many empirical functions¹ and in most cases cannot be expressed in a tractable analytical form when dealing with multiphase flow. This is further complicated in gas lift wells, where the injection point is also pressure dependent, but changes the fluid composition and pressure profile above it.","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Currently, no mechanistic or empirical correlations fully capture the variability in these three-phase fluid flows (or the direct properties of the fluids themselves), so the most performant methods are typically matched to the conditions and fluids they were developed to describe².","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Most techniques for applying these correlations to calculate pressure profiles involve dividing the wellbore into a 1-dimensional series of discrete segments and calculating an average pressure change for the entire segment. Increasing segmentation will generally improve accuracy at the cost of additional computation. The most feasible and stable method for resolving the pressure change in each segment is typically some form of fixed-point iteration by specifying an error tolerance ε and iterating until f(p) - p  ε, where p is the average pressure in the segment.","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"¹For an example of many widely-used correlations for pressure- and temperature-dependent properties of oil, water, and gas, see the \"Fluids\" section of the Fekete documentation.","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"²For a comprehensive overview of the theory of these applied methods in the context of gas lift engineering and nodal analysis, see Gábor Takács' Gas Lift Manual (2005, Pennwell Books).","category":"page"},{"location":"#Contents-1","page":"Overview","title":"Contents","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"Pages = [\r\n  \"core.md\",\r\n  \"utilities.md\",\r\n  \"plotting.md\",\r\n  \"correlations.md\",\r\n  \"pvt.md\",\r\n  \"valves.md\",\r\n  \"utilities.md\",\r\n  \"extending.md\"\r\n]\r\nDepth = 2","category":"page"},{"location":"core/#Core-functionality-1","page":"Core functions","title":"Core functionality","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Pages = [\"core.md\"]\r\nDepth = 3","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"using PressureDrop\r\n\r\nsurveyfilepath = joinpath(dirname(dirname(pathof(PressureDrop))), \"test/testdata/Sawgrass_9_32/Test_survey_Sawgrass_9.csv\")\r\n\r\nvalvefilepath = joinpath(dirname(dirname(pathof(PressureDrop))), \"test/testdata/valvedata_wrappers_1.csv\")","category":"page"},{"location":"core/#Creating-and-updating-models-1","page":"Core functions","title":"Creating and updating models","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Model definitions are created and stored as WellModel objects. Although all of the functionality of this package is exposed as pure functions, mutating and copying WellModels is a much easier way to track and iterate on parameter sets.","category":"page"},{"location":"core/#Wellbores-1","page":"Core functions","title":"Wellbores","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"The key component required for the pressure drop calculations is a Wellbore object that defines the flow path in terms of directional survey points (measured depth, inclination, and true vertical depth) and tubular inner diameter.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Wellbore objects can be constructed from arrays, or from CSV files with read_survey, which includes some optional convenience arguments to change delimiters, skip lines, or truncate the survey. Tubing IDs do not have to be uniform and can be specified segment to segment.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"examplewell = read_survey(path = surveyfilepath, id = 2.441, maxdepth = 6500) #an outlet point at 0 MD is added if not present","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"The expected format for a survey file is a comma separated file with measured depth, inclination from vertical, true vertical depth, and optionally, flowpath inner diameter:","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"using PrettyTables\r\n\r\nsurveyheader = [\"MD\" \"Inc\" \"TVD\" \"ID\";\r\n                \"ft\" \"°\" \"ft\" \"in\"]\r\n\r\nsurveyexample = string.(\r\n    [0 0 0 2.441;\r\n     460 0 460 2.441;\r\n     552 1.5 551.94 2.441;\r\n     644 1.5 643.91 1.995]) |> \r\n    s -> vcat(s, [\"⋮\" \"⋮\" \"⋮\" \"⋮\"])","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"pretty_table(surveyexample, surveyheader, unicode_rounded) # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"See an example survey input file here.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"By default, read_survey will skip a single header line and take a single ID for the entire flowpath.","category":"page"},{"location":"core/#Valve-designs-1","page":"Core functions","title":"Valve designs","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"GasliftValves objects define the valve strings in terms of measured run depth, test rack opening pressure, R value (ratio of the area of the port to the area of the bellows), and port size.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"examplevalves = read_valves(path = valvefilepath)","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"These can also be constructed directly or from CSV files. The expect format is valves by measured depth, test rack opening pressure @ 60° F in psig, the R ratio of the valve (effective area of the port to the area of the bellows), and the port size in 64ths inches:","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"using PrettyTables\r\n\r\nvalveheader = [\"MD\" \"PTRO\" \"R\" \"Port\";\r\n               \"ft\" \"psig\" \"Ap/Ab\" \"64ths in\"]\r\n\r\nvalveexample = string.(\r\n    [1813 1005 0.073 16;\r\n     2375 990 0.073 16;\r\n     2885 975 0.073 16;\r\n     3395 0 0 14]) |> \r\n     s -> vcat(s, [\"⋮\" \"⋮\" \"⋮\" \"⋮\"])","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"pretty_table(valveexample, valveheader, unicode_rounded) # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"See an example valve input file here.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"By default, read_valves will skip a single header line, and orifice valves are indicated by an R-value of 0.","category":"page"},{"location":"core/#Models-and-parameter-sets-1","page":"Core functions","title":"Models & parameter sets","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"WellModels do not have to be completely specified, but require defining the minimum fields for a simple pressure drop. In general, sensible defaults are selected for PVT functions. See the documentation for a list of optional fields.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Note that defining a valve string is optional if all that is desired is a normal pressure drop or temperature calculation.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"model = WellModel(wellbore = examplewell, roughness = 0.00065,\r\n                  valves = examplevalves,\r\n                  pressurecorrelation = BeggsAndBrill,\r\n                  WHP = 200, #wellhead pressure, psig\r\n                  CHP = 1050, #casing pressure, psig\r\n                  dp_est = 25, #estimated ΔP by segment. Not critical\r\n                  temperature_method = \"Shiu\", #temperatures can be calculated or provided directly as a array\r\n                  BHT = 160, geothermal_gradient = 0.9,  #°F, °F/100'\r\n                  q_o = 100, q_w = 500, #bpd\r\n                  GLR = 2500, naturalGLR = 400, #scf/bbl\r\n                  APIoil = 35, sg_water = 1.05, sg_gas = 0.65);","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Printing a WellModel will display all of its defined and undefined fields.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"note: Note\nAn important aspect of model definitions is that they include the temperature profile. Passing a model object to a wrapper function that calculates both pressure and temperature will mutate the temperature profile associate with the model.","category":"page"},{"location":"core/#Pressure-and-temperature-calculations-1","page":"Core functions","title":"Pressure & temperature calculations","text":"","category":"section"},{"location":"core/#Pressure-traverses-and-temperature-profiles-1","page":"Core functions","title":"Pressure traverses & temperature profiles","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Pressure and temperature profiles can be generated from a WellModel using pressure_and_temp! (for tubing calculations only) or pressures_and_temp! (to include casing calculations).","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"tubing_pressures = pressure_and_temp!(model); #note that this updates temperature in the .temperatureprofile field of the WellModel","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Several plotting functions are available to visualize the outputs.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"using Gadfly #necessary to load plotting functions\r\n\r\nplot_pressure(model, tubing_pressures, \"Tubing Pressure Drop\")\r\ndraw(SVG(\"plot-pressure-core.svg\", 4inch, 4inch), ans); nothing # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"(Image: )","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Pressure traverses for just tubing or just casing, utilizing an existing temperature profile, can be calculated using traverse_topdown or casing_traverse_topdown.","category":"page"},{"location":"core/#Gas-lift-analysis-1","page":"Core functions","title":"Gas lift analysis","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"The gaslift_model! function will calculate the pressure and temperature profiles, most likely operating point (assuming single-point injection), and opening and closing pressures of the valves.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"tubing_pressures, casing_pressures, valvedata = gaslift_model!(model, find_injectionpoint = true,\r\n               dp_min = 100) #required minimum ΔP at depth to consider as an operating valve\r\n\r\nplot_gaslift(model, tubing_pressures, casing_pressures, valvedata, \"Gas Lift Analysis Plot\")\r\ndraw(SVG(\"plot-gl-core.svg\", 5inch, 4inch), ans); nothing # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"(Image: )","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"The results of the valve calculations can be printed as a table:","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"valve_table(valvedata)","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"The data for a valve table can be calculated directly using valve_calcs, which will interpolate pressures and temperatures at depth from known producing P/T profiles.","category":"page"},{"location":"core/#Bulk-calculations-1","page":"Core functions","title":"Bulk calculations","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Pressure drops can be calculated in bulk, either by passing model arguments to functions directly, or by mutating or copying model objects.","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"nominal_rate(D_sei, b) = ((1-D_sei)^(-b) - 1)/b #secant decline rates to nominal rates, b ≠ 0\r\nhyperbolic_rate(q_i, b, D_sei, t) = q_i / (1 + b * nominal_rate(D_sei, b) * t)^(1/b) #spot rate from a hyperbolic decline for t in years\r\n\r\n# generate test data\r\nq_i = 3000\r\nb = 1.2\r\ndecline = 0.85\r\ntimesteps = range(0,2, step = 1/365)\r\ndeclinedata = [hyperbolic_rate(q_i, b, decline, time) for time in timesteps]\r\nnoise = [randn() .* 15 for sample in timesteps]\r\ntestdata = max.(declinedata .+ noise, 0)\r\n\r\n# check results\r\ndays = timesteps .* 365\r\nplot(x = days, y = testdata, Geom.path,\r\n     Guide.xlabel(\"Time (days)\"),\r\n     Guide.ylabel(\"Total Fluid (bpd)\"),\r\n     Scale.y_continuous(format = :plain, minvalue = 0))\r\ndraw(SVG(\"test-data.svg\", 6inch, 4inch), ans); nothing # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"(Image: )","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"# set up and calculate pressure data\r\nexamplewell = read_survey(path = surveyfilepath, id = 2.441, maxdepth = 6500)\r\n\r\nfunction timestep_pressure(rate, temp, watercut, GLR)\r\n    temps = linear_wellboretemp(WHT = temp, BHT = 165, wellbore = examplewell)\r\n\r\n    return traverse_topdown(wellbore = examplewell, roughness = 0.0065, temperatureprofile = temps,\r\n                     pressurecorrelation = BeggsAndBrill, dp_est = 25, error_tolerance = 0.1,\r\n                     q_o = rate * (1 - watercut), q_w = rate * watercut, GLR = GLR,\r\n                     APIoil = 36, sg_water = 1.05, sg_gas = 0.65,\r\n                     WHP = 120)[end]\r\nend\r\n\r\nwellhead_temps = range(125, 85, length = 731)\r\nwatercuts = range(1, 0.5, length = 731)\r\nGLR = range(0, 5000, length = 731)\r\n\r\npressures = timestep_pressure.(testdata, wellhead_temps, watercuts, GLR)\r\n\r\n# examine outputs\r\nplot(x = days, y = pressures, Geom.path, Theme(default_color = \"purple\"),\r\n     Guide.xlabel(\"Time (days)\"),\r\n     Guide.ylabel(\"Flowing Pressure (psig)\"),\r\n     Scale.y_continuous(format = :plain, minvalue = 0),\r\n     Guide.title(\"FBHP Over Time\"))\r\ndraw(SVG(\"pressure-data.svg\", 6inch, 4inch), ans); nothing # hide","category":"page"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"(Image: )","category":"page"},{"location":"core/#Types-and-Functions-1","page":"Core functions","title":"Types and Functions","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Types\nWellbore\nGasliftValves\nWellModel\nFunctions   traverse_topdown   casing_traverse_topdown   pressure_and_temp!   pressures_and_temp!   gaslift_model!","category":"page"},{"location":"core/#Types-1","page":"Core functions","title":"Types","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"Wellbore\r\nGasliftValves\r\nWellModel","category":"page"},{"location":"core/#PressureDrop.Wellbore","page":"Core functions","title":"PressureDrop.Wellbore","text":"Wellbore: type to define a flow path as an input for pressure drop calculations\n\nSee read_survey for helper method to create a Wellbore object from deviation survey files.\n\nFields\n\nmd::Array{Float64, 1}: measured depth for each segment in feet\ninc::Array{Float64, 1}: inclination from vertical for each segment in degrees, e.g. true vertical = 0°\ntvd::Array{Float64, 1}: true vertical depth for each segment in feet\nid::Array{Float64, 1}: inner diameter for each pip segment in inches\n\nConstructors\n\nBy default, negative depths are disallowed, and a 0 MD / 0 TVD point is added if not present, to allow graceful handling of outlet pressure definitions. To bypass both the error checking and convenience feature, pass true as the final argument to the constructor.\n\nWellbore(md, inc, tvd, id::Array{Float64, 1}, allow_negatives = false): defines a new Wellbore object from a survey with inner diameter defined for each segment. Lengths of each input array must be equal.\n\nWellbore(md, inc, tvd, id::Float64, allow_negatives = false): defines a new Wellbore object with a uniform ID along the entire flow path.\n\nWellbore(md, inc, tvd, id, valves::GasliftValves, allow_negatives = false): defines a new Wellbore object and adds interpolated survey points for each gas lift valve.\n\n\n\n\n\n","category":"type"},{"location":"core/#PressureDrop.GasliftValves","page":"Core functions","title":"PressureDrop.GasliftValves","text":"GasliftValves: a type to define a string of gas lift valves for valve & pressure calculations.\n\nConstructor: GasliftValves(md::Array, PTRO::Array, R::Array, port::Array)\n\nPort sizes must be in integer increments of 64ths inches.\n\nIndicate orifice valves with an R-value and PTRO of 0.\n\n\n\n\n\n","category":"type"},{"location":"core/#PressureDrop.WellModel","page":"Core functions","title":"PressureDrop.WellModel","text":"WellModel: Makes it easier to iterate well models\n\npressure_and_temp(;model::WellModel)\n\nDevelop pressure traverse in psia and temperature profile in °F from wellhead down to datum for a WellModel object. Requires the following fields to be defined in the model:\n\nReturns a pressure profile as an Array{Float64,1} and a temperature profile as an Array{Float64,1}, referenced to the measured depths in the original Wellbore object.\n\nPressure correlation functions available:\n\nBeggsAndBrill with Payne correction factors\nHagedornAndBrown with Griffith and Wallis bubble flow correction\n\nRequired\n\nwell::Wellbore: Wellbore object that defines segmentation/mesh, with md, tvd, inclination, and hydraulic diameter\nroughness: pipe wall roughness in inches\ntemperature_method = \"linear\": temperature method to use; \"Shiu\" for Ramey method with Shiu relaxation factor, \"linear\" for linear interpolation\nWHT = missing: wellhead temperature in °F; required for temperature_method = \"linear\"\ngeothermal_gradient = missing: geothermal gradient in °F per 100 ft; required for temperature_method = \"Shiu\"\nBHT = bottomhole temperature in °F\nWHP: absolute outlet pressure (wellhead pressure) in psig\ndp_est: estimated starting pressure differential (in psi) to use for all segments–impacts convergence time\nq_o: oil rate in stocktank barrels/day\nq_w: water rate in stb/d\nGLR: total wellhead gas:liquid ratio, inclusive of injection gas, in scf/bbl\nAPIoil: API gravity of the produced oil\nsg_water: specific gravity of produced water\nsg_gas: specific gravity of produced gas\n\nOptional\n\ninjection_point = missing: injection point in MD for gas lift, above which total GLR is used, and below which natural GLR is used\nnaturalGLR = missing: GLR to use below point of injection, in scf/bbl\n`pressurecorrelation::Function = BeggsAndBrill: pressure correlation to use\nerror_tolerance = 0.1: error tolerance for each segment in psi\nmolFracCO2 = 0.0, molFracH2S = 0.0: produced gas fractions of hydrogen sulfide and CO2, [0,1]\npseudocrit_pressure_correlation::Function = HankinsonWithWichertPseudoCriticalPressure: psuedocritical pressure function to use\npseudocrit_temp_correlation::Function = HankinsonWithWichertPseudoCriticalTemp: pseudocritical temperature function to use\nZ_correlation::Function = KareemEtAlZFactor: natural gas compressibility/Z-factor correlation to use\ngas_viscosity_correlation::Function = LeeGasViscosity: gas viscosity correlation to use\nsolutionGORcorrelation::Function = StandingSolutionGOR: solution GOR correlation to use\nbubblepoint::Union{Function, Real} = StandingBubblePoint: either bubble point correlation or bubble point in psia\noilVolumeFactor_correlation::Function = StandingOilVolumeFactor: oil volume factor correlation to use\nwaterVolumeFactor_correlation::Function = GouldWaterVolumeFactor: water volume factor correlation to use\ndead_oil_viscosity_correlation::Function = GlasoDeadOilViscosity: dead oil viscosity correlation to use\nlive_oil_viscosity_correlation::Function = ChewAndConnallySaturatedOilViscosity: saturated oil viscosity correction function to use\nfrictionfactor::Function = SerghideFrictionFactor: correlation function for Darcy-Weisbach friction factor\noutlet_referenced = true: whether to use outlet pressure (WHP) or inlet pressure (BHP) for\n\n\n\n\n\n","category":"type"},{"location":"core/#Functions-1","page":"Core functions","title":"Functions","text":"","category":"section"},{"location":"core/#","page":"Core functions","title":"Core functions","text":"traverse_topdown\r\ncasing_traverse_topdown\r\npressure_and_temp!\r\npressures_and_temp!\r\ngaslift_model!","category":"page"},{"location":"core/#PressureDrop.traverse_topdown","page":"Core functions","title":"PressureDrop.traverse_topdown","text":"traverse_topdown(;<named arguments>)\n\nDevelop pressure traverse from wellhead down to datum in psia, returning a pressure profile as an Array{Float64,1}.\n\nPressure correlation functions available:\n\nBeggsAndBrill with Payne correction factors\nHagedornAndBrown with Griffith and Wallis bubble flow correction\n\nArguments\n\nAll arguments are named keyword arguments.\n\nRequired\n\nwellbore::Wellbore: Wellbore object that defines segmentation/mesh, with md, tvd, inclination, and hydraulic diameter\nroughness: pipe wall roughness in inches\ntemperatureprofile::Array{Float64, 1}: temperature profile (in °F) as an array with matching entries for each pipe segment defined in the Wellbore input\nWHP: outlet pressure (wellhead pressure) in psig\ndp_est: estimated starting pressure differential (in psi) to use for all segments–impacts convergence time\nq_o: oil rate in stocktank barrels/day\nq_w: water rate in stb/d\nGLR: total wellhead gas:liquid ratio, inclusive of injection gas, in scf/bbl\nAPIoil: API gravity of the produced oil\nsg_water: specific gravity of produced water\nsg_gas: specific gravity of produced gas\n\nOptional\n\ninjection_point = missing: injection point in MD for gas lift, above which total GLR is used, and below which natural GLR is used\nnaturalGLR = missing: GLR to use below point of injection, in scf/bbl\n`pressurecorrelation::Function = BeggsAndBrill: pressure correlation to use\nerror_tolerance = 0.1: error tolerance for each segment in psi\nmolFracCO2 = 0.0, molFracH2S = 0.0: produced gas fractions of hydrogen sulfide and CO2, [0,1]\npseudocrit_pressure_correlation::Function = HankinsonWithWichertPseudoCriticalPressure: psuedocritical pressure function to use\npseudocrit_temp_correlation::Function = HankinsonWithWichertPseudoCriticalTemp: pseudocritical temperature function to use\nZ_correlation::Function = KareemEtAlZFactor: natural gas compressibility/Z-factor correlation to use\ngas_viscosity_correlation::Function = LeeGasViscosity: gas viscosity correlation to use\nsolutionGORcorrelation::Function = StandingSolutionGOR: solution GOR correlation to use\nbubblepoint::Union{Function, Real} = StandingBubblePoint: either bubble point correlation or bubble point in psia\noilVolumeFactor_correlation::Function = StandingOilVolumeFactor: oil volume factor correlation to use\nwaterVolumeFactor_correlation::Function = GouldWaterVolumeFactor: water volume factor correlation to use\ndead_oil_viscosity_correlation::Function = GlasoDeadOilViscosity: dead oil viscosity correlation to use\nlive_oil_viscosity_correlation::Function = ChewAndConnallySaturatedOilViscosity: saturated oil viscosity correction function to use\nfrictionfactor::Function = SerghideFrictionFactor: correlation function for Darcy-Weisbach friction factor\n\n\n\n\n\ntraverse_topdown(;model::WellModel)\n\ncalculate top-down traverse from a WellModel object. Requires the following fields to be defined in the model:\n\n...\n\n\n\n\n\n","category":"function"},{"location":"core/#PressureDrop.casing_traverse_topdown","page":"Core functions","title":"PressureDrop.casing_traverse_topdown","text":"casing_traverse_topdown(;<named arguments>)\n\nDevelops pressure traverse from casing head down to datum in psia, returning a pressure profile as an Array{Float64,1}.\n\nUses only density and is only applicable to pure gas injection, i.e. assumes no friction loss and no liquid entrained in gas stream (reasonable assumptions for relatively dry gas taken through several compression stages and injected through relatively large casing).\n\nPressure inputs are in psig.\n\nArguments\n\nAll arguments are named keyword arguments.\n\nRequired\n\nwellbore::Wellbore: Wellbore object that defines segmentation/mesh, with md, tvd, inclination, and hydraulic diameter\ntemperatureprofile::Array{Float64, 1}: temperature profile (in °F) as an array with matching entries for each pipe segment defined in the Wellbore input\nCHP: casing head pressure, i.e. absolute surface injection pressure in psig\ndp_est: estimated starting pressure differential (in psi) to use for all segments–impacts convergence time\nsg_gas: specific gravity of produced gas\n\nOptional\n\nerror_tolerance = 0.1: error tolerance for each segment in psi\nmolFracCO2 = 0.0, molFracH2S = 0.0: produced gas fractions of hydrogen sulfide and CO2, [0,1]\npseudocrit_pressure_correlation::Function = HankinsonWithWichertPseudoCriticalPressure: psuedocritical pressure function to use\npseudocrit_temp_correlation::Function = HankinsonWithWichertPseudoCriticalTemp: pseudocritical temperature function to use\nZ_correlation::Function = KareemEtAlZFactor: natural gas compressibility/Z-factor correlation to use\n\n\n\n\n\ncasing_traverse_topdown(m::WellModel)\n\nRemaps casing traverse to work with WellModels\n\n\n\n\n\n","category":"function"},{"location":"core/#PressureDrop.pressure_and_temp!","page":"Core functions","title":"PressureDrop.pressure_and_temp!","text":"pressure_and_temp(;model::WellModel)\n\nDevelop pressure traverse in psia and temperature profile in °F from wellhead down to datum for a WellModel object. Requires the following fields to be defined in the model:\n\nReturns a pressure profile as an Array{Float64,1} and updates the passed WellModel's temperature profile, referenced to the measured depths in the original Wellbore object.\n\nArguments\n\nAll arguments are defined in the model object; see the WellModel documentation for reference.\n\nPressure correlation functions available:\n\nBeggsAndBrill with Payne correction factors\nHagedornAndBrown with Griffith and Wallis bubble flow correction\n\nTemperature methods available:\n\n\"Shiu\" to utilize the Ramey 1962 method with the Shiu 1980 relaxation factor correlation\n\"linear\" for a linear interpolation between wellhead and bottomhole temperature based on TVD\n\nRequired WellModel fields\n\nwell::Wellbore: Wellbore object that defines segmentation/mesh, with md, tvd, inclination, and hydraulic diameter\nroughness: pipe wall roughness in inches\ntemperature_method = \"linear\": temperature method to use; \"Shiu\" for Ramey method with Shiu relaxation factor, \"linear\" for linear interpolation\nWHT = missing: wellhead temperature in °F; required for temperature_method = \"linear\"\ngeothermal_gradient = missing: geothermal gradient in °F per 100 ft; required for temperature_method = \"Shiu\"\nBHT = bottomhole temperature in °F\nWHP: absolute outlet pressure (wellhead pressure) in psig\ndp_est: estimated starting pressure differential (in psi) to use for all segments–impacts convergence time\nq_o: oil rate in stocktank barrels/day\nq_w: water rate in stb/d\nGLR: total wellhead gas:liquid ratio, inclusive of injection gas, in scf/bbl\nAPIoil: API gravity of the produced oil\nsg_water: specific gravity of produced water\nsg_gas: specific gravity of produced gas\n\nOptional WellModel fields\n\ninjection_point = missing: injection point in MD for gas lift, above which total GLR is used, and below which natural GLR is used\nnaturalGLR = missing: GLR to use below point of injection, in scf/bbl\n`pressurecorrelation::Function = BeggsAndBrill: pressure correlation to use\nerror_tolerance = 0.1: error tolerance for each segment in psi\nmolFracCO2 = 0.0, molFracH2S = 0.0: produced gas fractions of hydrogen sulfide and CO2, [0,1]\npseudocrit_pressure_correlation::Function = HankinsonWithWichertPseudoCriticalPressure: psuedocritical pressure function to use\npseudocrit_temp_correlation::Function = HankinsonWithWichertPseudoCriticalTemp: pseudocritical temperature function to use\nZ_correlation::Function = KareemEtAlZFactor: natural gas compressibility/Z-factor correlation to use\ngas_viscosity_correlation::Function = LeeGasViscosity: gas viscosity correlation to use\nsolutionGORcorrelation::Function = StandingSolutionGOR: solution GOR correlation to use\nbubblepoint::Union{Function, Real} = StandingBubblePoint: either bubble point correlation or bubble point in psia\noilVolumeFactor_correlation::Function = StandingOilVolumeFactor: oil volume factor correlation to use\nwaterVolumeFactor_correlation::Function = GouldWaterVolumeFactor: water volume factor correlation to use\ndead_oil_viscosity_correlation::Function = GlasoDeadOilViscosity: dead oil viscosity correlation to use\nlive_oil_viscosity_correlation::Function = ChewAndConnallySaturatedOilViscosity: saturated oil viscosity correction function to use\nfrictionfactor::Function = SerghideFrictionFactor: correlation function for Darcy-Weisbach friction factor\noutlet_referenced = true: whether to use outlet pressure (WHP) or inlet pressure (BHP) for starting point\n\n\n\n\n\n","category":"function"},{"location":"core/#PressureDrop.pressures_and_temp!","page":"Core functions","title":"PressureDrop.pressures_and_temp!","text":"pressures_and_temp!(m::WellModel)\n\nReturns a tubing pressure profile as an Array{Float64,1}, casing pressure profile as an Array{Float64,1}, and updates the passed WellModel's temperature profile, referenced to the measured depths in the original Wellbore object.\n\nArguments\n\nSee WellModel documentation.\n\n\n\n\n\n","category":"function"},{"location":"core/#PressureDrop.gaslift_model!","page":"Core functions","title":"PressureDrop.gaslift_model!","text":"gaslift_model!(m::WellModel; find_injectionpoint::Bool = false, dp_min = 100)\n\nReturns a tubing pressure profile as an Array{Float64,1}, casing pressure profile as an Array{Float64,1}, valve data table, and updates the passed WellModel's temperature profile,\n\nArguments\n\nSee WellModel documentation.\n\nfind_injectionpoint::Bool = false: whether to automatically infer the injection point (taken as the lowest reasonable point of lift based on differential pressure)*\ndp_min = 100: minimum casing-tubing differential pressure at depth to infer an injection point\n\n*\"greedy opening\" heuristic: select lowest non-orifice valve where CP @ depth is within operating envelope (below opening pressure but still above closing pressure) and has greater than the indicated differential pressure (dp_min)\n\n\n\n\n\n","category":"function"},{"location":"plotting/#Plotting-1","page":"Plotting","title":"Plotting","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"All plotting functions wrap Gadfly plot definitions.","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"note: Note\nPlotting functionality is lazily loaded and not available until Gadfly has been loaded.","category":"page"},{"location":"plotting/#Examples-1","page":"Plotting","title":"Examples","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"# outputs & inputs hidden when doc is generated\r\n\r\nusing PressureDrop\r\n\r\nsegments = 100\r\nMDs = range(0, 5000, length = segments) |> collect\r\nincs = repeat([0], inner = segments)\r\nTVDs = range(0, 5000, length = segments) |> collect\r\n\r\nwell = Wellbore(MDs, incs, TVDs, 2.441)\r\n\r\ntestpath = joinpath(dirname(dirname(pathof(PressureDrop))), \"test/testdata\")\r\nvalvepath = joinpath(testpath, \"valvedata_wrappers_1.csv\")\r\nvalves = read_valves(path = valvepath, delim = ',', skiplines = 1) #implicit read_valves test\r\n\r\nmodel = WellModel(wellbore = well, roughness = 0.0, valves = valves,\r\n                    temperature_method = \"Shiu\", geothermal_gradient = 1.0, BHT = 200,\r\n                    pressurecorrelation = HagedornAndBrown, WHP = 350 - pressure_atmospheric, dp_est = 25,\r\n                    q_o = 100, q_w = 500, GLR = 1200, APIoil = 35, sg_water = 1.0, sg_gas = 0.8, CHP = 1000, naturalGLR = 0)\r\n\r\ntubing_pressures, casing_pressures, valvedata = gaslift_model!(model, find_injectionpoint = true, dp_min = 100)","category":"page"},{"location":"plotting/#[plot_gaslift](@ref)-1","page":"Plotting","title":"plot_gaslift","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"using Gadfly\r\n\r\nplot_gaslift(model, tubing_pressures, casing_pressures, valvedata, \"Gas Lift Analysis Plot\")\r\ndraw(SVG(\"plot-gl.svg\", 5inch, 4inch), ans); nothing # hide","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"(Image: )","category":"page"},{"location":"plotting/#[plot_pressure](@ref)-1","page":"Plotting","title":"plot_pressure","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"\r\nplot_pressure(model, tubing_pressures, \"Tubing Pressure Drop\")\r\ndraw(SVG(\"plot-pressure.svg\", 4inch, 4inch), ans); nothing # hide","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"(Image: )","category":"page"},{"location":"plotting/#[plot_pressures](@ref)-1","page":"Plotting","title":"plot_pressures","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"\r\nplot_pressures(model, tubing_pressures, casing_pressures, \"Tubing and Casing Pressures\")\r\ndraw(SVG(\"plot-pressures.svg\", 4inch, 4inch), ans); nothing # hide","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"(Image: )","category":"page"},{"location":"plotting/#[plot_temperature](@ref)-1","page":"Plotting","title":"plot_temperature","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"\r\nplot_temperature(model.wellbore, model.temperatureprofile, \"Temperature Profile\")\r\ndraw(SVG(\"plot-temperature.svg\", 4inch, 4inch), ans); nothing # hide","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"(Image: )","category":"page"},{"location":"plotting/#[plot_pressureandtemp](@ref)-1","page":"Plotting","title":"plot_pressureandtemp","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"\r\nplot_pressureandtemp(model, tubing_pressures, casing_pressures, \"Pressures and Temps\")\r\ndraw(SVG(\"plot-pressureandtemp.svg\", 5inch, 4inch), ans); nothing # hide","category":"page"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"(Image: )","category":"page"},{"location":"plotting/#Functions-1","page":"Plotting","title":"Functions","text":"","category":"section"},{"location":"plotting/#","page":"Plotting","title":"Plotting","text":"plot_pressure\r\nplot_pressures\r\nplot_temperature\r\nplot_pressureandtemp\r\nplot_gaslift","category":"page"},{"location":"plotting/#PressureDrop.plot_pressure","page":"Plotting","title":"PressureDrop.plot_pressure","text":"plot_pressure(well::Wellbore, pressures, ctitle = nothing)\n\nPlot pressure profile for a given wellbore using the pressure outputs from one of the pressure traverse functions.\n\nSee traverse_topdown and pressure_and_temp.\n\n\n\n\n\nplot_pressure(m::WellModel, pressures, ctitle = nothing)\n\nPlot pressure profile for a given wellbore using the pressure outputs from one of the pressure traverse functions.\n\nThe wellbore field must be defined in the passed WellModel.\n\nSee traverse_topdown and pressure_and_temp.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#PressureDrop.plot_pressures","page":"Plotting","title":"PressureDrop.plot_pressures","text":"function plot_pressures(well::Wellbore, tubing_pressures, casing_pressures, ctitle = nothing, valvedepths = [])\n\nPlot relevant gas lift pressures for a given wellbore and set of calculated pressures.\n\nSee traverse_topdown, casing_traverse_topdown, and pressure_and_temp.\n\n\n\n\n\nplot_pressures(m::WellModel, tubing_pressures, casing_pressures, ctitle = nothing)\n\nPlot relevant gas lift pressures for a given wellbore and set of calculated pressures.\n\nThe wellbore field must be defined in the passed WellModel, with the valves field optional.\n\nSee traverse_topdown, casing_traverse_topdown, and pressure_and_temp.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#PressureDrop.plot_temperature","page":"Plotting","title":"PressureDrop.plot_temperature","text":"plot_temperature(well::Wellbore, temps, ctitle = nothing)\n\nPlot temperature profile for a given wellbore using the pressure outputs from one of the pressure traverse functions.\n\nSee linear_wellboretemp and Shiu_wellboretemp.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#PressureDrop.plot_pressureandtemp","page":"Plotting","title":"PressureDrop.plot_pressureandtemp","text":"plot_pressureandtemp(well::Wellbore, tubing_pressures, casing_pressures, temps, ctitle = nothing, valvedepths = [])\n\nPlot pressure & temperature profiles for a given wellbore using the pressure & temperature outputs from the pressure traverse & temperature functions.\n\nSee traverse_topdown,pressure_and_temp, linear_wellboretemp, Shiu_wellboretemp.\n\n\n\n\n\nplot_pressureandtemp(m::WellModel, tubing_pressures, casing_pressures, ctitle = nothing)\n\nPlot pressure & temperature profiles for a given wellbore using the pressure & temperature outputs from the pressure traverse & temperature functions.\n\nThe wellbore and temperatureprofile fields must be defined in the passed WellModel, with the valves field optional.\n\nSee traverse_topdown,pressure_and_temp, linear_wellboretemp, Shiu_wellboretemp.\n\n\n\n\n\n","category":"function"},{"location":"plotting/#PressureDrop.plot_gaslift","page":"Plotting","title":"PressureDrop.plot_gaslift","text":"plot_gaslift(well::Wellbore, tubing_pressures, casing_pressures, temps, valvedata, ctitle = nothing)\n\nPlot pressure & temperature profiles along with valve depths and opening/closing pressures for a gas lift well.\n\nRequires a valve table in the same format as returned by the valve_calcs function.\n\nSee traverse_topdown,pressure_and_temp, linear_wellboretemp, Shiu_wellboretemp, valve_calcs.\n\n\n\n\n\nplot_gaslift(m::WellModel, tubing_pressures, casing_pressures, valvedata, ctitle = nothing)\n\nPlot pressure & temperature profiles along with valve depths and opening/closing pressures for a gas lift well.\n\nRequires a valve table in the same format as returned by the valve_calcs function. The passed WellModel must also have the wellbore, temperatureprofile, and valves fields defined.\n\nSee traverse_topdown,pressure_and_temp, linear_wellboretemp, Shiu_wellboretemp, valve_calcs.\n\n\n\n\n\n","category":"function"},{"location":"correlations/#Correlations-1","page":"Pressure & temperature correlations","title":"Correlations","text":"","category":"section"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"Pressure, temperature, and friction factor correlations. Not used directly but passed as model arguments.","category":"page"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"Pressure drop correlations\nBeggs and Brill, with Payne correction\nHagedorn and Brown, with Griffith and Wallis bubble flow correction","category":"page"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"Temperature correlations & methods\nLinear temperature profile\nShiu temperature profile: Ramey temperature correlation with Shiu relaxation factor\nRamey temp: single-point Ramey temperature correlation\nShiu relaxation factor","category":"page"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"Friction factor correlations\nSerghide friction factor(preferred)\nChen friction factor","category":"page"},{"location":"correlations/#Pressure-correlations-1","page":"Pressure & temperature correlations","title":"Pressure correlations","text":"","category":"section"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"BeggsAndBrill\r\nHagedornAndBrown","category":"page"},{"location":"correlations/#PressureDrop.BeggsAndBrill","page":"Pressure & temperature correlations","title":"PressureDrop.BeggsAndBrill","text":"BeggsAndBrill(<arguments>)\n\nCalculates pressure drop for a single pipe segment using Beggs and Brill 1973 method, with optional Payne corrections.\n\nReturns a ΔP in psi.\n\nDoesn't account for oil/water phase slip, but does properly account for inclination.\n\nAs of release v0.9, assumes outlet-defined models only, i.e. top-down from wellhead; thus, uphill flow corresponds to producers and downhill flow to injectors.\n\nFor more information, see Petroleum Production Systems by Economides et al., or the the Fekete reference on pressure drops.\n\nArguments\n\nAll arguments take U.S. field units.\n\nmd: measured depth of the pipe segment, feet\ntvd: true vertical depth, feet\ninclination: inclination from vertical, degrees (e.g. vertical => 0)\nid: inner diameter of the pipe segment, inches\nv_sl: superficial liquid mixture velocity, ft/s\nv_sg: superficial gas velocity, ft/s\nρ_l: liquid mixture density, lb/ft³\nρ_g: gas density, lb/ft³\nσ_l: liquid/gas interfacial tension, centipoise\nμ_l: liquid mixture dynamic viscosity\nμ_g: gas dynamic viscosity\nroughness: pipe roughness, inches\npressure_est: estimated average pressure of the pipe segment (needed to determine the kinetic effects component of the pressure drop)\nfrictionfactor::Function = SerghideFrictionFactor: function used to determine the Moody friction factor\nuphill_flow = true: indicates uphill or downhill flow. It is assumed that the start of the 1D segment is an outlet and not an inlet\nPayneCorrection = true: indicates whether the Payne et al. 1979 corrections should be applied to prevent overprediction of liquid holdup.\n\n\n\n\n\n","category":"function"},{"location":"correlations/#PressureDrop.HagedornAndBrown","page":"Pressure & temperature correlations","title":"PressureDrop.HagedornAndBrown","text":"HagedornAndBrown(<arguments>)\n\nCalculates pressure drop for a single pipe segment using the Hagedorn & Brown 1965 method (with recent modifications), with optional Griffith and Wallis bubble flow corrections.\n\nReturns a ΔP in psi.\n\nDoesn't account for oil/water phase slip, and does not incorporate flow regimes distinctions outside of in/out of bubble flow. Originally developed for vertical wells.\n\nAs of release v0.9, assumes outlet-defined models only, i.e. top-down from wellhead; thus, uphill flow corresponds to producers and downhill flow to injectors.\n\nFor more information, see Petroleum Production Systems by Economides et al., or the the Fekete reference on pressure drops.\n\nArguments\n\nAll arguments take U.S. field units.\n\nmd: measured depth of the pipe segment, feet\ntvd: true vertical depth, feet\ninclination: inclination from vertical, degrees (e.g. vertical => 0)\nid: inner diameter of the pipe segment, inches\nv_sl: superficial liquid mixture velocity, ft/s\nv_sg: superficial gas velocity, ft/s\nρ_l: liquid mixture density, lb/ft³\nρ_g: gas density, lb/ft³\nσ_l: liquid/gas interfacial tension, centipoise\nμ_l: liquid mixture dynamic viscosity\nμ_g: gas dynamic viscosity\nroughness: pipe roughness, inches\npressure_est: estimated average pressure of the pipe segment (needed to determine the kinetic effects component of the pressure drop)\nfrictionfactor::Function = SerghideFrictionFactor: function used to determine the Moody friction factor\nuphill_flow = true: indicates uphill or downhill flow. It is assumed that the start of the 1D segment is an outlet and not an inlet\nGriffithWallisCorrection = true: indicates whether the Griffith and Wallis 1961 corrections should be applied to prevent overprediction of liquid holdup.\n\n\n\n\n\n","category":"function"},{"location":"correlations/#Temperature-correlations-1","page":"Pressure & temperature correlations","title":"Temperature correlations","text":"","category":"section"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"linear_wellboretemp\r\nShiu_wellboretemp\r\nRamey_temp\r\nShiu_Beggs_relaxationfactor","category":"page"},{"location":"correlations/#PressureDrop.linear_wellboretemp","page":"Pressure & temperature correlations","title":"PressureDrop.linear_wellboretemp","text":"linear_wellboretemp(;WHT, BHT, wellbore::Wellbore)\n\nLinear temperature profile from a wellhead temperature and bottomhole temperature in °F for a Wellbore object.\n\nInterpolation is based on true vertical depth of the wellbore, not md.\n\n\n\n\n\n","category":"function"},{"location":"correlations/#PressureDrop.Shiu_wellboretemp","page":"Pressure & temperature correlations","title":"PressureDrop.Shiu_wellboretemp","text":"Shiu_wellboretemp(<named arguments>)\n\nWrapper to compute temperature profile for a Wellbore object using Ramey correlation with Shiu relaxation factor correlation.\n\nArguments\n\nBHT: bottomhole temperature in °F\ngeothermal_gradient = 1.0: geothermal gradient in °F per 100 feet\nwellbore::Wellbore: Wellbore object to use as reference for segmentation, inclination, and\nq_o: oil rate in stb/d\nq_w: water rate in stb/d\nGLR: gas:liquid ratio in scf/day\nAPIoil: oil gravity\nsg_water: water specific gravity\nsg_gas: gas specific gravity\nWHP: wellhead/outlet absolute pressure in psig\n\n\n\n\n\n","category":"function"},{"location":"correlations/#PressureDrop.Ramey_temp","page":"Pressure & temperature correlations","title":"PressureDrop.Ramey_temp","text":"Ramey_wellboretemp(z, inclination, T_bh, A, G_g = 1.0)\n\nEstimates wellbore temp using Ramey 1962 method.\n\nArguments\n\nz: true vertical depth from the bottom of the well, ft\nT_bh: bottomhole temperature, °F\nA: relaxation factor\nG_g = 1.0: geothermal gradient in °F per 100 ft of true vertical depth\n\n\n\n\n\n","category":"function"},{"location":"correlations/#PressureDrop.Shiu_Beggs_relaxationfactor","page":"Pressure & temperature correlations","title":"PressureDrop.Shiu_Beggs_relaxationfactor","text":"Shiu_Beggs_relaxationfactor(<arguments>)\n\nGenerates the relaxation factor, A, needed for the Ramey method, for underspecified conditions.\n\nThis correlation assumes flow has stabilized and that the transient time component f(t) is not changing.\n\nArguments\n\nAll arguments are in U.S. field units.\n\nq_o: oil rate in stb/d\nq_w: water rate in stb/d\nAPIoil: API oil gravity\nsg_water: water specific gravity\nGLR: gas:liquid ratio in scf/stb\nsg_gas: gas specific gravity\nid: flow path inner diameter in inches\nWHP: wellhead/outlet absolute pressure in psig\n\n\n\n\n\n","category":"function"},{"location":"correlations/#Friction-factor-correlations-1","page":"Pressure & temperature correlations","title":"Friction factor correlations","text":"","category":"section"},{"location":"correlations/#","page":"Pressure & temperature correlations","title":"Pressure & temperature correlations","text":"SerghideFrictionFactor\r\nChenFrictionFactor","category":"page"},{"location":"correlations/#PressureDrop.SerghideFrictionFactor","page":"Pressure & temperature correlations","title":"PressureDrop.SerghideFrictionFactor","text":"SerghideFrictionFactor(N_Re, id, roughness = 0.01)\n\nUses the direct Serghide 1984 correlation to determine friction factor, in place of the Colebrook implicit solution.\n\nTakes the dimensionless Reynolds number, pipe inner diameter in inches, and roughness in inches.\n\nNot intended for Reynolds numbers between 2000-4000.\n\n\n\n\n\n","category":"function"},{"location":"correlations/#PressureDrop.ChenFrictionFactor","page":"Pressure & temperature correlations","title":"PressureDrop.ChenFrictionFactor","text":"ChenFrictionFactor(N_Re, id, roughness = 0.01)\n\nUses the direct Chen 1979 correlation to determine friction factor, in place of the Colebrook implicit solution.\n\nTakes the dimensionless Reynolds number, pipe inner diameter in inches, and roughness in inches.\n\nNot intended for Reynolds numbers between 2000-4000.\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PVT-properties-1","page":"PVT properties","title":"PVT properties","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"Most of the PVT property functions are passed as arguments to the core calculation functions, but are not used directly.","category":"page"},{"location":"pvt/#Exported-functions-1","page":"PVT properties","title":"Exported functions","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"User-facing functions used for model construction.","category":"page"},{"location":"pvt/#Oil-1","page":"PVT properties","title":"Oil","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"StandingSolutionGOR\nStandingBubblePoint\nStandingOilVolumeFactor\nBeggsAndRobinsonDeadOilViscosity\nGlasoDeadOilViscosity\nChewAndConnallySaturatedOilViscosity","category":"page"},{"location":"pvt/#Gas-1","page":"PVT properties","title":"Gas","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"LeeGasViscosity\nHankinsonWithWichertPseudoCriticalTemp\nHankinsonWithWichertPseudoCriticalPressure\nPapayZFactor\nKareemEtAlZFactor\nKareemEtAlZFactor_simplified","category":"page"},{"location":"pvt/#Water-1","page":"PVT properties","title":"Water","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"GouldWaterVolumeFactor","category":"page"},{"location":"pvt/#Internal-functions-1","page":"PVT properties","title":"Internal functions","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"PressureDrop.gasVolumeFactor\nPressureDrop.gasDensity_insitu\nPressureDrop.oilDensity_insitu\nPressureDrop.waterDensity_stb\nPressureDrop.waterDensity_insitu\nPressureDrop.gas_oil_interfacialtension\nPressureDrop.gas_water_interfacialtension","category":"page"},{"location":"pvt/#Functions-1","page":"PVT properties","title":"Functions","text":"","category":"section"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"Modules = [PressureDrop]\r\nPages   = [\"pvtproperties.jl\"]","category":"page"},{"location":"pvt/#PressureDrop.BeggsAndRobinsonDeadOilViscosity-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.BeggsAndRobinsonDeadOilViscosity","text":"BeggsAndRobinsonDeadOilViscosity(APIoil, tempF)\n\nDead oil viscosity (μ_oD) in centipoise.\n\nTakes oil gravity (°API), temp (°F).\n\nUse with caution at 100-150° F: viscosity can be significantly overstated.\n\nBeggs and Robinson method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.ChewAndConnallySaturatedOilViscosity-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.ChewAndConnallySaturatedOilViscosity","text":"ChewAndConnallySaturatedOilViscosity(deadOilViscosity,  solutionGOR)\n\nSaturated oil viscosity (μₒ) in centipoise.\n\nTakes dead oil viscosity (cp), solution GOR (scf/bbl).\n\nChew and Connally method to correct from dead to live oil viscosity.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.GlasoDeadOilViscosity-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.GlasoDeadOilViscosity","text":"GlasoDeadOilViscosity(APIoil, tempF)\n\nDead oil viscosity (μ_oD) in centipoise.\n\nTakes oil gravity (°API), temp (°F).\n\nGlaso method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.GouldWaterVolumeFactor-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.GouldWaterVolumeFactor","text":"GouldWaterVolumeFactor(pressureAbs,  tempF)\n\nWater volume factor (B_w).\n\nTakes absolute pressure (psia), temp (°F).\n\nGould method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.HankinsonWithWichertPseudoCriticalPressure-Tuple{Any,Any,Any}","page":"PVT properties","title":"PressureDrop.HankinsonWithWichertPseudoCriticalPressure","text":"HankinsonWithWichertPseudoCriticalPressure(specificGravity, molFracCO2, molFracH2S)\n\nPseudo-critical pressure in psia.\n\nTakes gas specific gravity, mol fraction of CO₂, mol fraction of H₂S.\n\nHankin-Thomas-Phillips method, with Wichert and Aziz correction for sour components.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.HankinsonWithWichertPseudoCriticalTemp-Tuple{Any,Any,Any}","page":"PVT properties","title":"PressureDrop.HankinsonWithWichertPseudoCriticalTemp","text":"HankinsonWithWichertPseudoCriticalTemp(specificGravity, molFracCO2, molFracH2S)\n\nPseudo-critical temperature, adjusted pseudo-critical temperature in °R, and Wichert correction factor\n\nTakes gas specific gravity, mol fraction of CO₂, mol fraction of H₂S.\n\nHankin-Thomas-Phillips method, with Wichert and Aziz correction for sour components.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.KareemEtAlZFactor-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.KareemEtAlZFactor","text":"KareemEtAlZFactor(pressurePseudoCritical, tempPseudoCriticalRankine, psiAbs, tempF)\n\nNatural gas compressibility deviation factor (Z).\n\nTake pseudocritical pressure (psia), pseudocritical temperature (°R), pressure (psia), temperature (°F).\n\nCan use gauge pressures so long as unit basis matches.\n\nDirect correlation continuous over 0.2 ≤ P_pr ≤ 15.\n\nKareem, Iwalewa, Al-Marhoun, 2016.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.KareemEtAlZFactor_simplified-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.KareemEtAlZFactor_simplified","text":"KareemEtAlZFactor_simplified(pressurePseudoCritical, tempPseudoCriticalRankine, psiAbs, tempF)\n\nNatural gas compressibility deviation factor (Z).\n\nTake pseudocritical pressure (psia), pseudocritical temperature (°R), pressure (psia), temperature (°F).\n\nLinearized form from Kareem, Iwalewa, Al-Marhoun, 2016.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.LeeGasViscosity-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.LeeGasViscosity","text":"LeeGasViscosity(specificGravity, psiAbs, tempF, Z)\n\nGas viscosity (μ_g) in centipoise.\n\nTakes gas specific gravity, psia, °F, Z (deviation factor).\n\nLee et al 1966 method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.PapayZFactor-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.PapayZFactor","text":"PapayZFactor(pressurePseudoCritical, tempPseudoCriticalRankine, psiAbs, tempF)\n\nNatural gas compressibility deviation factor (Z).\n\nTake pseudocritical pressure (psia), pseudocritical temperature (°R), pressure (psia), temperature (°F).\n\nPapay 1968 method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.StandingBubblePoint-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.StandingBubblePoint","text":"StandingBubblePoint(APIoil, sg_gas, R_b, tempF)\n\nBubble point pressure in psia.\n\nTakes oil gravity (°API), gas specific gravity, total solution GOR at pressures above bubble point (R_b, scf/bbl), temp (°F).\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.StandingOilVolumeFactor-NTuple{5,Any}","page":"PVT properties","title":"PressureDrop.StandingOilVolumeFactor","text":"StandingOilVolumeFactor(APIoil, specificGravityGas, solutionGOR, psiAbs, tempF)\n\nOil volume factor (Bₒ).\n\nTakes oil gravity (°API), gas specific gravity, solution GOR (scf/bbl), absolute pressure (psia), temp (°F).\n\nStanding method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.StandingSolutionGOR-Tuple{Any,Any,Any,Any,Any,Function}","page":"PVT properties","title":"PressureDrop.StandingSolutionGOR","text":"StandingSolutionGOR(APIoil, specificGravityGas, psiAbs, tempF)\n\nSolution GOR (Rₛ) in scf/bbl.\n\nTakes oil gravity (°API), gas specific gravity, pressure (psia), temp (°F), total solution GOR (R_b, scf/bbl), and bubblepoint function.\n\nStanding method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.StandingSolutionGOR-Tuple{Any,Any,Any,Any,Any,Real}","page":"PVT properties","title":"PressureDrop.StandingSolutionGOR","text":"StandingSolutionGOR(APIoil, specificGravityGas, psiAbs, tempF)\n\nSolution GOR (Rₛ) in scf/bbl.\n\nTakes oil gravity (°API), gas specific gravity, pressure (psia), temp (°F), total solution GOR (R_b, scf/bbl), and bubblepoint value (psia).\n\nStanding method.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.gasDensity_insitu-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.gasDensity_insitu","text":"gasDensity_insitu(specificGravityGas, Z_factor, abspressure, tempF)\n\nIn-situ gas density in lb/ft³ (ρ_g).\n\nTakes gas s.g., Z-factor, absolute pressure (psia), temperature (°F).\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.gasVolumeFactor-Tuple{Any,Any,Any}","page":"PVT properties","title":"PressureDrop.gasVolumeFactor","text":"gasVolumeFactor(pressureAbs, Z, tempF)\n\nCorrected gas volume factor (B_g).\n\nTakes absolute pressure (psia), Z-factor, temp (°F).\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.gas_oil_interfacialtension-Tuple{Any,Any,Any}","page":"PVT properties","title":"PressureDrop.gas_oil_interfacialtension","text":"gas_oil_interfacialtension(APIoil, pressureAbsolute, tempF)\n\nGas-oil interfactial tension in dynes/cm.\n\nTakes oil API, absolute pressure (psia), temp (°F).\n\nPossibly Baker Swerdloff method; same method utilized by Fekete\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.gas_water_interfacialtension-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.gas_water_interfacialtension","text":"gas_water_interfacialtension(pressureAbsolute, tempF)\n\nGas-water interfactial tension in dynes/cm.\n\nTakes absolute pressure (psia), temp (°F).\n\nPossibly Baker Swerdloff method; same method utilized by Fekete\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.oilDensity_insitu-NTuple{4,Any}","page":"PVT properties","title":"PressureDrop.oilDensity_insitu","text":"oilDensity_insitu(APIoil,  specificGravityGas,  solutionGOR,  oilVolumeFactor)\n\nOil density (ρₒ) in mass-lbs per ft³.\n\nTakes oil gravity (°API), gas specific gravity, solution GOR (R_s, scf/bbl), oil volume factor.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.waterDensity_insitu-Tuple{Any,Any}","page":"PVT properties","title":"PressureDrop.waterDensity_insitu","text":"waterDensity_insitu(waterGravity, B_w)\n\nWater density in lb per ft³.\n\nTakes specific gravity, B_w.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#PressureDrop.waterDensity_stb-Tuple{Any}","page":"PVT properties","title":"PressureDrop.waterDensity_stb","text":"waterDensity_stb(waterGravity)\n\nWater density in lb per ft³.\n\nTakes water specific gravity.\n\n\n\n\n\n","category":"method"},{"location":"pvt/#","page":"PVT properties","title":"PVT properties","text":"PressureDrop.gasVolumeFactor\r\nPressureDrop.gasDensity_insitu\r\nPressureDrop.oilDensity_insitu\r\nPressureDrop.waterDensity_stb\r\nPressureDrop.waterDensity_insitu\r\nPressureDrop.gas_oil_interfacialtension\r\nPressureDrop.gas_water_interfacialtension","category":"page"},{"location":"pvt/#PressureDrop.gasVolumeFactor","page":"PVT properties","title":"PressureDrop.gasVolumeFactor","text":"gasVolumeFactor(pressureAbs, Z, tempF)\n\nCorrected gas volume factor (B_g).\n\nTakes absolute pressure (psia), Z-factor, temp (°F).\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.gasDensity_insitu","page":"PVT properties","title":"PressureDrop.gasDensity_insitu","text":"gasDensity_insitu(specificGravityGas, Z_factor, abspressure, tempF)\n\nIn-situ gas density in lb/ft³ (ρ_g).\n\nTakes gas s.g., Z-factor, absolute pressure (psia), temperature (°F).\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.oilDensity_insitu","page":"PVT properties","title":"PressureDrop.oilDensity_insitu","text":"oilDensity_insitu(APIoil,  specificGravityGas,  solutionGOR,  oilVolumeFactor)\n\nOil density (ρₒ) in mass-lbs per ft³.\n\nTakes oil gravity (°API), gas specific gravity, solution GOR (R_s, scf/bbl), oil volume factor.\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.waterDensity_stb","page":"PVT properties","title":"PressureDrop.waterDensity_stb","text":"waterDensity_stb(waterGravity)\n\nWater density in lb per ft³.\n\nTakes water specific gravity.\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.waterDensity_insitu","page":"PVT properties","title":"PressureDrop.waterDensity_insitu","text":"waterDensity_insitu(waterGravity, B_w)\n\nWater density in lb per ft³.\n\nTakes specific gravity, B_w.\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.gas_oil_interfacialtension","page":"PVT properties","title":"PressureDrop.gas_oil_interfacialtension","text":"gas_oil_interfacialtension(APIoil, pressureAbsolute, tempF)\n\nGas-oil interfactial tension in dynes/cm.\n\nTakes oil API, absolute pressure (psia), temp (°F).\n\nPossibly Baker Swerdloff method; same method utilized by Fekete\n\n\n\n\n\n","category":"function"},{"location":"pvt/#PressureDrop.gas_water_interfacialtension","page":"PVT properties","title":"PressureDrop.gas_water_interfacialtension","text":"gas_water_interfacialtension(pressureAbsolute, tempF)\n\nGas-water interfactial tension in dynes/cm.\n\nTakes absolute pressure (psia), temp (°F).\n\nPossibly Baker Swerdloff method; same method utilized by Fekete\n\n\n\n\n\n","category":"function"},{"location":"valves/#Valve-calculations-1","page":"Valve calculations","title":"Valve calculations","text":"","category":"section"},{"location":"valves/#","page":"Valve calculations","title":"Valve calculations","text":"Functions to generate valve performance curves and valve pressure tables using current conditions.","category":"page"},{"location":"valves/#","page":"Valve calculations","title":"Valve calculations","text":"Modules = [PressureDrop]\r\nPages = [\"valves.md\"]","category":"page"},{"location":"valves/#Example-1","page":"Valve calculations","title":"Example","text":"","category":"section"},{"location":"valves/#","page":"Valve calculations","title":"Valve calculations","text":"using PressureDrop\r\n\r\nMDs = [0,1813, 2375, 2885, 3395]\r\nTVDs = [0,1800, 2350, 2850, 3350]\r\nincs = [0,0,0,0,0]\r\nid = 2.441\r\n\r\nwell = Wellbore(MDs, incs, TVDs, id)\r\nvalves = GasliftValves([1813,2375,2885,3395], #valve MDs\r\n                       [1005,990,975,960], #valve PTROs (psig)\r\n                       [0.073,0.073,0.073,0.073], #valve R-values\r\n                       [16,16,16,16]) #valve port sizes in 64ths inches\r\n\r\ntubing_pressures = [150,837,850,840,831] #pressures at depth\r\ncasing_pressures = 1070 .+ [0,53,70,85,100]\r\ntemps = [135,145,148,151,153] #temps at depth\r\n\r\nvdata, inj_depth = valve_calcs(valves = valves, well = well, sg_gas = 0.72, tubing_pressures = tubing_pressures, casing_pressures = casing_pressures, tubing_temps = temps, casing_temps = temps)\r\n\r\nvalve_table(vdata, inj_depth)","category":"page"},{"location":"valves/#Functions-1","page":"Valve calculations","title":"Functions","text":"","category":"section"},{"location":"valves/#","page":"Valve calculations","title":"Valve calculations","text":"Modules = [PressureDrop]\r\nPages   = [\"valvecalculations.jl\"]","category":"page"},{"location":"valves/#PressureDrop.estimate_valve_Rvalue","page":"Valve calculations","title":"PressureDrop.estimate_valve_Rvalue","text":"estimate_valve_Rvalue(port_size, valve_size, lapped_seat = true)\n\nEstimates an R-value for your valve (not recommended) using sensible defaults, if you do not have a manufacturer-provided value specific to the valve (recommended).\n\nTakes port size as a diameter in 64ths inches, a valve size in inches {1.0, 1.5}, and an indication of whether the seat is lapped as {true, false}.\n\n\n\n\n\n","category":"function"},{"location":"valves/#PressureDrop.valve_calcs-Tuple{}","page":"Valve calculations","title":"PressureDrop.valve_calcs","text":"valve_calcs(<named args>)\n\nCalculates a standard table of pressures and temperatures for anticipated valve operation at current (steady-state) conditions.\n\nNote that all inputs and outputs are in psig for ease of interpretation.\n\nAdditionally, all forms are derived from the force balance for opening, Pt * Ap + Pc * (Ad - Ap) ≥ Pd * Ad     and the force balance for closing, Pc ≤ P_d.\n\nFurther note that:\n\nthe valve closing pressures given are a theoretical minimum (casing pressure is assumed to act on the entire area of the bellows/dome until closing).\nvalve opening and closing pressures are recalculated from PTRO and current conditions, rather than the other way around common during design.\ncasing temperature is assumed to be 85% of tubing temperature if only a tubing temperature profile is provided. To force the use of identical temperature profiles, pass the wellbore temperature twice.\n\nArguments\n\nvalves::GasliftValves: a GasliftValves object defining the valve string\nwell::Wellbore: a Wellbore object defining the survey/segmentation points, deviation survey, and tubing\nsg_gas: injection gas specific gravity\ntubing_pressures::Array{T, 1} where T <: Real: precalculated tubing pressures in psig\ncasing_pressures::Array{T, 1} where T <: Real: precalculated casing pressures in psig\ntubing_temps::Array{T, 1} where T <: Real: precalculated tubing temperature profile in °F\ncasing_temps::Array{T, 1} where T <: Real = tubing_temps .* 0.85: precalculated casing temperature profile in °F\ndp_min = 100: minimum differential pressure (CP - TP) in psi for calculating an assumed injection point\none_inch_coefficient = 0.76: coefficient of discharge for Thornhill-Craver gas passage calculations for 1\" valves\none_pt_five_inch_coefficient = 0.6: coefficient of discharge for Thornhill-Craver gas passage calculations for 1.5\" valves\n\n\n\n\n\n","category":"method"},{"location":"valves/#PressureDrop.valve_table","page":"Valve calculations","title":"PressureDrop.valve_table","text":"valve_table(valvedata, injection_depth = nothing)\n\nPretty prints the data returned by valve_calcs for interpretation.\n\n\n\n\n\n","category":"function"},{"location":"valves/#PressureDrop.SageAndLacy_nitrogen_Zfactor-Tuple{Any,Any}","page":"Valve calculations","title":"PressureDrop.SageAndLacy_nitrogen_Zfactor","text":"SageAndLacy_nitrogen_Zfactor(p, T)\n\nSage and Lacy experimental Z-factor correlation.\n\nTakes pressure in psia and temperature in °F.\n\n\n\n\n\n","category":"method"},{"location":"valves/#PressureDrop.ThornhillCraver_gaspassage","page":"Valve calculations","title":"PressureDrop.ThornhillCraver_gaspassage","text":"ThornhillCraver_gaspassage(<args>)\n\nThornhill-Craver gas throughput for square-edged orifice.\n\nSee section 8.1 of Fundamentals of Gas Lift Engineering by Ali Hernandez, as well as published work by Ken Decker, for an in-depth discussion of the application of Thornhill-Craver to gas lift valve performance.\n\nIn general, T-C will be optimistic, but should be expected to have an effective error of up to +/- 30%.\n\nArguments\n\nP_td: tubing pressure at depth, psig\nP_cd: casing pressure at depth, psig\nT_cd: gas (casing fluid) temperature at depth, °F\nportsize_64ths: valve port size in 64ths inch\nsg_gas: gas specific gravity relative to air\nmolFracCO2 = 0.0, molFracH2S = 0.0: produced gas fractions of hydrogen sulfide and CO2, [0,1]\nC_d = 0.827: discharge coefficient–uses 0.827 by defaul to match original T-C\nZ_correlation::Function = KareemEtAlZFactor: natural gas compressibility/Z-factor correlation to use\npseudocrit_pressure_correlation::Function = HankinsonWithWichertPseudoCriticalPressure: psuedocritical pressure function to use\npseudocrit_temp_correlation::Function = HankinsonWithWichertPseudoCriticalTemp: pseudocritical temperature function to use\n\n\n\n\n\n","category":"function"},{"location":"valves/#PressureDrop.ThornhillCraver_gaspassage_simplified-NTuple{4,Any}","page":"Valve calculations","title":"PressureDrop.ThornhillCraver_gaspassage_simplified","text":"ThornhillCraver_gaspassage_simplified(P_td, P_cd, T_cd, portsize_64ths)\n\nThornhill-Craver gas throughput for square-edged orifice (optimistic since it assumes a fully open valve where the stem does not interfere with flow).\n\nThis simplified version assumes gas specific gravity at 0.65.\n\nArguments\n\nP_td: tubing pressure at depth, psig\nP_cd: casing pressure at depth, psig\nT_cd: gas (casing fluid) temperature at depth, °F\nportsize_64ths: valve port size in 64ths inch\n\n\n\n\n\n","category":"method"},{"location":"valves/#PressureDrop.domepressure_downhole","page":"Valve calculations","title":"PressureDrop.domepressure_downhole","text":"domepressure_downhole(p_d_set, T_v, error_tolerance = 0.1, p_d_est = p_d_set/0.9, T_set = 60, Zfactor::Function = SageAndLacy_nitrogen_Zfactor)\n\nIteratively calculates the dome pressure in psia of the valve downhole using gas equation of state, assuming that the change in dome volume is negligible.\n\nArguments\n\nPTRO: test rack opening pressure of valve in psig\nR: R-value of the valve (nominally, area of port divided by area of bellows/dome, but adjusted for lapped seats, etc)\nT_v: valve temperature at depth\nerror_tolerance = 0.1: error tolerance in psi\ndelta_est: initial estimate for downhole dome pressure as a percentage of surface set pressure\nT_set = 60: setting temperature in °F\nZfactor::Function = SageAndLacy_nitrogen_Zfactor: Z-factor function parameterized by target conditions as pressure in psia and temperature in °F\n\n\n\n\n\n","category":"function"},{"location":"utilities/#Utilities-1","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"utilities/#","page":"Utilities","title":"Utilities","text":"note: Note\nThe functions to read files all expect CSVs with headers, defined in field units.","category":"page"},{"location":"utilities/#","page":"Utilities","title":"Utilities","text":"Modules = [PressureDrop]\r\nPages = [\"utilities.md\"]","category":"page"},{"location":"utilities/#Functions-1","page":"Utilities","title":"Functions","text":"","category":"section"},{"location":"utilities/#","page":"Utilities","title":"Utilities","text":"Modules = [PressureDrop]\r\nPages   = [\"utilities.jl\"]","category":"page"},{"location":"utilities/#PressureDrop.read_survey-Tuple{}","page":"Utilities","title":"PressureDrop.read_survey","text":"read_survey(<named arguments>)\n\nReads in a wellbore deviation survey from a delimited file and returns a Wellbore object for use with pressure drop calculations.\n\nAssumes the column order for the file is (MD, INC, TVD, <optional ID>), in U.S. field units, where:     MD = measured depth, ft     Inc = inclination, degrees from vertical     TVD = true vertical depth, ft     ID = pipe hydraulic diameter, inches\n\nArguments\n\npath::String: absolute or relative path to survey file\ndelim::Char = ',': file delimiter\nskiplines::Int64 = 1: number of lines to skip before survey data starts; assumes a 1-line header by default\nmaxdepth::Union{Bool, Real} = false: If set to a real number, drop survey data past a certain measured depth. If false, keep the entire survey.\nid_included::Bool = false: whether the survey segment ID is stored as a fourth column. This is the easiest option to include tapered strings.\nid::Real = 2.441: the diameter to assume for the entire wellbore length, if the ID is not included in the survey file.\nvalves::Union{GasliftValves, Nothing} = nothing: set of gas lift valves to add corresponding depths to the final Wellbore object via interpolation\nallow_negatives::Bool = false: allow negative depths on the survey inputs\n\n\n\n\n\n","category":"method"},{"location":"utilities/#PressureDrop.read_valves-Tuple{}","page":"Utilities","title":"PressureDrop.read_valves","text":"read_valves(;path::String, delim::Char = ',', skiplines::Int64 = 1)\n\nExpects a CSV with columns for [measured depth (ft)], [test rack opening pressure (psig)], [R-value (dimensionless)], [port size (diameter in 64ths inch)].\n\nIndicate orifice valves with an R-value and PTRO of 0.\n\nArguments\n\npath::String: absolute or relative path to survey file\ndelim::Char = ',': file delimiter\nskiplines::Int64 = 1: number of lines to skip before survey data starts; assumes a 1-line header by default\n\n\n\n\n\n","category":"method"},{"location":"utilities/#PressureDrop.interpolate-Tuple{Array{T,1} where T<:Real,Array{T,1} where T<:Real,Any}","page":"Utilities","title":"PressureDrop.interpolate","text":"interpolate(ref_array, property::Array{Real,1}, point)\n\nInterpolate between points without any bounds checking.\n\n\n\n\n\n","category":"method"},{"location":"utilities/#PressureDrop.interpolate_all-Tuple{Wellbore,Array{Array{T,1},1} where T<:Real,Array{T,1} where T<:Real}","page":"Utilities","title":"PressureDrop.interpolate_all","text":"interpolate_all(well::Wellbore, properties::Array{Array{Real,1},1}, points::Array{Real,1})\n\nInterpolate multiple points for multiple properties with bounds checking.\n\n\n\n\n\n","category":"method"},{"location":"extending/#Extending-the-calculation-engine-1","page":"Extending","title":"Extending the calculation engine","text":"","category":"section"},{"location":"extending/#","page":"Extending","title":"Extending","text":"PVT or pressure/temperature correlations can easily be added, either by modifying the original source, or more simply by defining new functions in your script or session that match the interface of existing functions.","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"For example, to add a new PVT function, first inspect either the function signature, source, or documentation for one of the functions of the category you are adding to:","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"julia> using PressureDrop\r\n\r\nhelp?> StandingSolutionGOR","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"StandingSolutionGOR(APIoil, specificGravityGas, psiAbs, tempF, R_b, bubblepoint::Real)\r\n\r\nSolution GOR (Rₛ) in scf/bbl.\r\n\r\nTakes oil gravity (°API), gas specific gravity, pressure (psia), temp (°F), total solution GOR (R_b, scf/bbl), and bubblepoint value (psia).\r\n\r\n<other methods not shown>","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"Then simply define your new function, making sure to either utilize the same interface, or capture extra unneeded arguments.","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"function HanafySolutionGOR(APIoil, specificGravityGas, psiAbs, tempF, R_b, bubblepoint::Real)\r\n  if\r\n\r\n  elseif psiAbs <= 157.28\r\n    return 0\r\n  else\r\n    return -49.069 + 0.312 * psiAbs\r\nend","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"The new PVT function can now be added to an existing model (or used in a pressure traverse function call or the creation of a new model):","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"oldmodel.solutionGORcorrelation = HanafySolutionGOR","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"Note that in this example the new method for solution GOR will only handle bubble points defined in absolute pressure.","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"Utilizing RCall, PyCall, or ccall will also allow adding functions defined in R, Python, and C or Fortran respectively.","category":"page"},{"location":"extending/#","page":"Extending","title":"Extending","text":"As of v1.0, defining new correlations or model functions that require additional arguments is not supported without modifying the source. However, feel free to either submit a pull request or open an issue requesting the additional functionality (include reference to the source material and several test cases).","category":"page"}]
}
